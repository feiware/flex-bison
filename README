
DC/OS Install on platform: AWS, CoreOS, CentOS, Vagrant
Service Run on DC/CS.

1. Install Docker Engine
   https://docs.docker.com/engine/installation/linux/centos/

2. Installing Vagrant and VirtualBox

   Step 1: Installing Virtualbox
       $ sudo apt-get install virtualbox
       $ sudo apt-get install virtualbox-dkms
   OR
   Installing VirtualBox 5.1 in Debian, Ubuntu and Linux Mint
       $ sudo apt-get remove virtualbox-4*
       $ sudo sh -c 'echo "deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" >> /etc/apt/sources.list.d/virtualbox.list'
       $ wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -  
       $ sudo apt-get update  
       $ sudo apt-get install virtualbox-5.1            
            
   Step 2: Download and install vagrant
      $ wget https://releases.hashicorp.com/vagrant/1.8.6/vagrant_1.8.6_x86_64.deb
      $ dpkg -i vagrant_1.8.6_x86_64.deb
      
   Step 3: Getting vagrant machine up
       $ vagrant box add precise32 http://files.vagrantup.com/precise32.box
       $ mkdir vagrant_project && cd vargrant_project
       $ vargrant init
       $ nano vargrantfile
         config.vm.box = "precise32"
       $ vargrant up
       connect using SSH
       $ vargrant ssh
   Step 4: return to the host machine
       $ exit
   Step 5: destroy the VM and remove the binary image
       $ vargrant destroy
       This command must be run from the directory which contains the vagrantfile you want to remove.
3. Timeout waiting for machine to boot
   ==> boot: Waiting for machine to boot. This may take a few minutes...
       boot: SSH address: 127.0.0.1:2202
       boot: SSH username: vagrant
       boot: SSH auth method: private key
   Timed out while waiting for the machine to boot. This means that
   Vagrant was unable to communicate with the guest machine within
   the configured ("config.vm.boot_timeout" value) time period.
Solution:
   Add it to the Vagrantfile:
   Vagrant.configure("2") do |config|
     config.ssh.private_key_path = "~/.ssh/id_rsa"
     config.ssh.forward_agent = true
   end
   1) config.ssh.private_key_path is your local private key
   2) The private key must be available to the local ssh-agent. You can check with ssh-add -L, if it's not listed add it with ssh-add ~/.ssh/id_rsa
   3) Add you public key to ~/.ssh/authorized_keys on the Vagrant VM. You can do it copy-and-pasting or using a tool like ssh-copy-id
